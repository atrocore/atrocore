{
  "labels": {
    "Dynamic Logic": "Dynamic Logic",
    "Name": "Name",
    "Label": "Label",
    "Type": "Type"
  },
  "options": {
    "dateTimeDefault": {
      "": "None",
      "javascript: return this.dateTime.getNow(1);": "Now",
      "javascript: return this.dateTime.getNow(5);": "Now (5m)",
      "javascript: return this.dateTime.getNow(15);": "Now (15m)",
      "javascript: return this.dateTime.getNow(30);": "Now (30m)",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'hours', 15);": "+1 hour",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'hours', 15);": "+2 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'hours', 15);": "+3 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'hours', 15);": "+4 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'hours', 15);": "+5 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'hours', 15);": "+6 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(7, 'hours', 15);": "+7 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(8, 'hours', 15);": "+8 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(9, 'hours', 15);": "+9 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(10, 'hours', 15);": "+10 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(11, 'hours', 15);": "+11 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(12, 'hours', 15);": "+12 hours",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'days', 15);": "+1 day",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'days', 15);": "+2 days",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'days', 15);": "+3 days",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'days', 15);": "+4 days",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'days', 15);": "+5 days",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'days', 15);": "+6 days",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'week', 15);": "+1 week"
    },
    "dateDefault": {
      "": "None",
      "javascript: return this.dateTime.getToday();": "Today",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'days');": "+1 day",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'days');": "+2 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'days');": "+3 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'days');": "+4 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'days');": "+5 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'days');": "+6 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'days');": "+7 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'days');": "+8 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'days');": "+9 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'days');": "+10 days",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'weeks');": "+1 week",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'weeks');": "+2 weeks",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'weeks');": "+3 weeks",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'months');": "+1 month",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'months');": "+2 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'months');": "+3 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'months');": "+4 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'months');": "+5 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'months');": "+6 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'months');": "+7 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'months');": "+8 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'months');": "+9 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'months');": "+10 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(11, 'months');": "+11 months",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'year');": "+1 year"
    }
  },
  "tooltips": {
    "isMultilang": "Automatic creation of fields via cloning the current one as many times as there are locales activated in the Multi-Languages Settings.",
    "fontSize": "Font size in em (relative to current font size).",
    "isSorted": "Options will be sorted after saving.",
    "audited": "Updates will be logged in stream.",
    "required": "Field will be mandatory. Can't be left empty.",
    "default": "Value will be set by default upon creating.",
    "min": "Min acceptable value.",
    "max": "Max acceptable value.",
    "seeMoreDisabled": "If not checked, long texts to be displayed will be shortened.",
    "lengthOfCut": "Excessive characters will be hidden in the view mode.",
    "maxLength": "Max acceptable length of text.",
    "before": "The date value should be before the date value of the specified field.",
    "after": "The date value should be after the date value of the specified field.",
    "readOnly": "Field value can't be specified by user.",
    "maxFileSize": "If empty or 0 then no limit.",
    "pattern": "To enable only capital letters with 10-symbol length use \"\/^[A-Z]{1,10}$\/\"",
    "foreignName": "Field to be shown in the relation."
  },
  "fieldParts": {
    "unit": {
      "unit": "(Unit)"
    },
    "datetimeOptional": {
      "date": "Date"
    }
  },
  "messages": {
    "defaultValidationFailed": "The default value can not contain special characters"
  },
  "exceptions": {
    "regexNotValid": "This REGEX Pattern is not valid.",
    "someFieldNotUnique": "Some field values are not unique.",
    "someFieldDontMathToPattern": "Some field don't match the pattern."
  }
}
