{
  "labels": {
    "Dynamic Logic": "Dynamische Logik",
    "Label": "Label",
    "Type": "Typ"
  },
  "options": {
    "dateTimeDefault": {
      "": "nichts",
      "javascript: return this.dateTime.getNow(1);": "jetzt",
      "javascript: return this.dateTime.getNow(5);": "jetzt (5min)",
      "javascript: return this.dateTime.getNow(15);": "jetzt (15min)",
      "javascript: return this.dateTime.getNow(30);": "jetzt (30min)",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'hours', 15);": "+1 Stunde",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'hours', 15);": "+2 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'hours', 15);": "+3 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'hours', 15);": "+4 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'hours', 15);": "+5 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'hours', 15);": "+6 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(7, 'hours', 15);": "+7 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(8, 'hours', 15);": "+8 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(9, 'hours', 15);": "+9 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(10, 'hours', 15);": "+10 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(11, 'hours', 15);": "+11 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(12, 'hours', 15);": "+12 Stunden",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'days', 15);": "+1 Tag",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(2, 'days', 15);": "+2 Tage",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(3, 'days', 15);": "+3 Tage",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(4, 'days', 15);": "+4 Tage",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(5, 'days', 15);": "+5 Tage",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(6, 'days', 15);": "+6 Tage",
      "javascript: return this.dateTime.getDateTimeShiftedFromNow(1, 'week', 15);": "+1 Woche"
    },
    "dateDefault": {
      "": "keine",
      "javascript: return this.dateTime.getToday();": "Heute",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'days');": "+1 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'days');": "+2 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'days');": "+3 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'days');": "+4 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'days');": "+5 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'days');": "+6 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'days');": "+7 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'days');": "+8 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'days');": "+9 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'days');": "+10 Tage",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'weeks');": "+1 Woche",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'weeks');": "+2 Wochen",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'weeks');": "+3 Wochen",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'months');": "+1 Monat",
      "javascript: return this.dateTime.getDateShiftedFromToday(2, 'months');": "+2 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(3, 'months');": "+3 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(4, 'months');": "+4 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(5, 'months');": "+5 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(6, 'months');": "+6 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(7, 'months');": "+7 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(8, 'months');": "+8 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(9, 'months');": "+9 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(10, 'months');": "+10 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(11, 'months');": "+11 Monate",
      "javascript: return this.dateTime.getDateShiftedFromToday(1, 'year');": "+1 Jahr"
    }
  },
  "tooltips": {
    "isSorted": "Optionen werden nach dem Speichern sortiert.",
    "isMultilang": "Automatische Erstellung von Feldern durch Klonen des ausgewählten Felds, sofern in den Einstellungen für Mehrsprachigkeit Ländereinstellungen aktiviert sind.",
    "fontSize": "Schriftgröße in em (relativ zur aktuellen Schriftgröße).",
    "audited": "Updates werden im Verlauf geloggt.",
    "required": "Das Feld ist ein Pflichtfeld und darf nicht leer sein.",
    "default": "Der Wert wird beim Erstellen standardmäßig gesetzt.",
    "min": "Min. zulässiger Wert",
    "max": "Max. zulässiger Wert",
    "seeMoreDisabled": "Wenn nicht aktiviert, werden lange anzuzeigende Texte gekürzt.",
    "lengthOfCut": "Zu viele Zeichen werden im Ansichtsmodus ausgeblendet.",
    "maxLength": "Maximal zulässige Textlänge.",
    "before": "Der Datumswert sollte vor dem Datumswert des angegebenen Feldes liegen.",
    "after": "Der Datumswert sollte nach dem Datumswert des angegebenen Feldes liegen.",
    "readOnly": "Feldwert kann nicht vom Benutzer angegebe, aber durch Formel berechnet werden.",
    "maxFileSize": "Wenn leer oder 0, dann keine Begrenzung.",
    "pattern": "Um nur Großbuchstaben mit einer Länge von 10 Zeichen zu ermöglichen, verwenden Sie \"\/^[A-Z]{1,10}$\/\"",
    "foreignName": "In der Relation anzuzeigendes Feld."
  },
  "fieldParts": {
    "currency": {
      "converted": "(Konvertiert)",
      "currency": "(Währung)"
    },
    "datetimeOptional": {
      "date": "Datum"
    },
    "unit": {
      "unit": "(Maßeinheit)"
    }
  },
  "messages": {
    "defaultValidationFailed": "Der Standardwert darf keine Sonderzeichen enthalten"
  },
  "exceptions": {
    "regexNotValid": "Dieses REGEX-Muster ist nicht gültig.",
    "someFieldNotUnique": "Einige Feldwerte sind nicht eindeutig.",
    "someFieldDontMathToPattern": "Einige Felder stimmen nicht mit dem Muster überein."
  }
}
